<?xml version="1.0"?>
<Container version="2">
  <Name>Rustpad</Name>
  <Repository>ekzhang/rustpad</Repository>
  <Registry>https://hub.docker.com/r/ekzhang/rustpad</Registry>
  <Network>bridge</Network>
  <MyIP/>
  <Shell>sh</Shell>
  <Privileged>false</Privileged>
  <Support>https://forums.unraid.net/topic/119282-support-smartphonelover-rustpad/</Support>
  <Project>https://github.com/ekzhang/rustpad</Project>
  <Overview>DESCRIPTION&#xD;
Rustpad is an efficient and minimal open-source collaborative text editor based on the operational transformation algorithm. It lets users collaborate in real time while writing code in their browser. Rustpad is completely self-hosted and no database is required.&#xD;
&#xD;
The server is written in Rust using the warp web server framework and the operational-transform library. We use wasm-bindgen to compile text operation logic to WebAssembly code, which runs in the browser. The frontend is written in TypeScript using React and interfaces with Monaco, the text editor that powers VS Code.&#xD;
&#xD;
Architecturally, client-side code communicates via WebSocket with a central server that stores in-memory data structures. This makes the editor very fast, allows us to avoid provisioning a database, and makes testing much easier. The tradeoff is that documents are transient and lost between server restarts, after 24 hours of inactivity or any other given time in days.&#xD;
&#xD;
Live demo:&#xD;
https://rustpad.io/&#xD;
&#xD;
NOTES&#xD;
&#x2022; If you want the data to be persistent in case of service restart, create the '/.../appdata/rustpad' dir, and place the DB file located on my GitHub repo: 'https://github.com/SmartPhoneLover/unraid-docker-templates/raw/main/templates/dependencies/rustpad/rustpad_db.zip', before building the container. Or, you can create your own SQLite DB file if you prefer (empty, no tables nor columns).&#xD;
&#x2022; If you don't want the data to be persistent in case of service restart, just delete 'SQLITE_URI' and 'Storage (database)' settings from this template.&#xD;
&#x2022; The container was and stills being originally designed to be non-persistent (data) after service restart or after a given time, so all information that the user could enter through its interface will be treated as volatile. But, it supports the use of SQLite DB to allow it to retain data in case of service restart (only).&#xD;
&#xD;
VERSION&#xD;
1.0 (2022-01-29)</Overview>
  <Category>Cloud: Productivity: Tools:</Category>
  <WebUI>http://[IP]:[PORT:3030]</WebUI>
  <TemplateURL/>
  <Icon>https://raw.githubusercontent.com/SmartPhoneLover/unraid-docker-templates/main/templates/icons/rustpad.png</Icon>
  <ExtraParams/>
  <PostArgs/>
  <CPUset/>
  <DateInstalled>1643488218</DateInstalled>
  <DonateText/>
  <DonateLink/>
  <Requires/>
  <Config Name="WebUI" Target="3030" Default="" Mode="tcp" Description="" Type="Port" Display="always" Required="false" Mask="false">3030</Config>
  <Config Name="Storage (database)" Target="/persist" Default="" Mode="rw" Description="This is the location for the SQLite DB file." Type="Path" Display="always" Required="false" Mask="false">/mnt/user/appdata/rustpad</Config>
  <Config Name="EXPIRY_DAYS" Target="EXPIRY_DAYS" Default="" Mode="" Description="The number of days that inactive documents are kept in memory before being garbage collected by the server (default 1)." Type="Variable" Display="advanced" Required="false" Mask="false">1</Config>
  <Config Name="RUST_LOG" Target="RUST_LOG" Default="" Mode="" Description="Directives that control application logging. (error/warn/info/debug/trace)" Type="Variable" Display="advanced" Required="false" Mask="false">info</Config>
  <Config Name="SQLITE_URI" Target="SQLITE_URI" Default="" Mode="" Description="A SQLite connection string used for persistence." Type="Variable" Display="advanced" Required="false" Mask="false">sqlite:///persist/rustpad_db.db</Config>
</Container>